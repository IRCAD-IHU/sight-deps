stages:
    - build
    - deploy

#
# Build stages
#

.linux_build_template:
    stage: build
    dependencies: []
    script:
        # Create directory structure
        - sudo chown -R sight:sight .
        - mkdir -p $CI_PROJECT_DIR/install $CI_PROJECT_DIR/build $CI_PROJECT_DIR/archive
        # Merge the branch into dev.
        - >
            if [ -z "$CI_COMMIT_TAG" ] && [ "$CI_COMMIT_REF_NAME" != "dev" ] && [ "$CI_COMMIT_REF_NAME" != "master" ]; then
              git config user.name ${GITLAB_USER_ID}
              git config user.email ${GITLAB_USER_EMAIL}
              git fetch --all
              git checkout dev
              git reset --hard origin/dev
              git merge "origin/"${CI_COMMIT_REF_NAME} --no-commit --no-ff
            fi
        # Build the project on the merge result.
        - rm -rf $CI_PROJECT_DIR/archive/* $CI_PROJECT_DIR/build/* $CI_PROJECT_DIR/install/*
        - cd $CI_PROJECT_DIR/build/
        - >
            cmake $CI_PROJECT_DIR
            -G Ninja
            -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR/install
            -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
        - ninja
        # Install and build the package
        - ninja install
        - ninja package
        # Test if there is no hard coded path
        - echo "Search for hard coded path in cmake config files:"
        - grep -rn $CI_PROJECT_DIR --include="*.cmake" $CI_PROJECT_DIR/install || export exit_code=$?
        - if [[ $exit_code -ne 0 ]]; then echo "No hard coded path found."; else false; fi;
        # Retrieve package name and store it as environment files since inherited environment variable is experimental
        # and need to explicitly enabled (https://docs.gitlab.com/ee/ci/variables/#enable-inherited-environment-variables-core-only)
        - export ARCHIVE_FILE_PATH=$(find $CI_PROJECT_DIR/build -maxdepth 1 -iname '*.tar.zst' -type f -print -quit)
        - export ARCHIVE_NAME=$(basename -s .tar.zst ${ARCHIVE_FILE_PATH})
        - mv ${ARCHIVE_FILE_PATH} $CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.tar.zst
        - echo "export ARCHIVE_NAME=${ARCHIVE_NAME}" > $CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.env
    artifacts:
        name: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}-${BUILD_TYPE}-${TARGET_OS}"
        paths:
            - "$CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.env"
            - "$CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.tar.zst"

# Ubuntu 20.10 build targets

build:linux_debug_20.10:
    extends: .linux_build_template
    image: "${SIGHT_CI_UBUNTU20_10}:dev"
    variables:
        BUILD_TYPE: "Debug"
        TARGET_OS: "Ubuntu-20.10"

build:linux_release_20.10:
    extends: .linux_build_template
    image: "${SIGHT_CI_UBUNTU20_10}:dev"
    variables:
        BUILD_TYPE: "Release"
        TARGET_OS: "Ubuntu-20.10"

build:linux_relwithdebinfo_20.10:
    extends: .linux_build_template
    image: "${SIGHT_CI_UBUNTU20_10}:dev"
    variables:
        BUILD_TYPE: "RelWithDebInfo"
        TARGET_OS: "Ubuntu-20.10"

# Ubuntu 21.04 build targets

build:linux_debug_21.04:
    extends: .linux_build_template
    image: "${SIGHT_CI_UBUNTU21_04}:dev"
    variables:
        BUILD_TYPE: "Debug"
        TARGET_OS: "Ubuntu-21.04"

build:linux_release_21.04:
    extends: .linux_build_template
    image: "${SIGHT_CI_UBUNTU21_04}:dev"
    variables:
        BUILD_TYPE: "Release"
        TARGET_OS: "Ubuntu-21.04"

build:linux_relwithdebinfo_21.04:
    extends: .linux_build_template
    image: "${SIGHT_CI_UBUNTU21_04}:dev"
    variables:
        BUILD_TYPE: "RelWithDebInfo"
        TARGET_OS: "Ubuntu-21.04"

#
# Deploy stages
#

.linux_deploy_template:
    stage: deploy
    script:
        # Upload data
        - sudo chown -R sight:sight .
        - source $CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.env
        - LOCAL_ARCHIVE_PATH="$CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.tar.zst"
        - REMOTE_ARCHIVE_PATH="IRCAD%20-%20Open/Binaries/sight-deps/${ARCHIVE_NAME}.tar.zst"
        - curl -X PUT -u "${OWNCLOUD_UID}:${OWNCLOUD_PWD}" "https://owncloud.ircad.fr/remote.php/webdav/${REMOTE_ARCHIVE_PATH}" --data-binary @"${LOCAL_ARCHIVE_PATH}"
        - curl -u "${OWNCLOUD_UID}:${OWNCLOUD_PWD}" "https://owncloud.ircad.fr/ocs/v1.php/apps/files_sharing/api/v1/shares" --data "path=/${REMOTE_ARCHIVE_PATH}&shareType=3"

    when: manual
    artifacts:
        name: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}-${BUILD_TYPE}-${TARGET_OS}"
        paths:
            - "$CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.env"
            - "$CI_PROJECT_DIR/archive/${BUILD_TYPE}_${TARGET_OS}_archive.tar.zst"

# Ubuntu 20.10 deploy targets

deploy:linux_debug_20.10:
    extends: .linux_deploy_template
    dependencies:
        - build:linux_debug_20.10
    image: "${SIGHT_CI_UBUNTU20_10}:dev"
    variables:
        BUILD_TYPE: "Debug"
        TARGET_OS: "Ubuntu-20.10"

deploy:linux_release_20.10:
    extends: .linux_deploy_template
    dependencies:
        - build:linux_release_20.10
    image: "${SIGHT_CI_UBUNTU20_10}:dev"
    variables:
        BUILD_TYPE: "Release"
        TARGET_OS: "Ubuntu-20.10"

deploy:linux_relwithdebinfo_20.10:
    extends: .linux_deploy_template
    dependencies:
        - build:linux_relwithdebinfo_20.10
    image: "${SIGHT_CI_UBUNTU20_10}:dev"
    variables:
        BUILD_TYPE: "RelWithDebInfo"
        TARGET_OS: "Ubuntu-20.10"

# Ubuntu 21.04 deploy targets

deploy:linux_debug_21.04:
    extends: .linux_deploy_template
    dependencies:
        - build:linux_debug_21.04
    image: "${SIGHT_CI_UBUNTU21_04}:dev"
    variables:
        BUILD_TYPE: "Debug"
        TARGET_OS: "Ubuntu-21.04"

deploy:linux_release_21.04:
    extends: .linux_deploy_template
    dependencies:
        - build:linux_release_21.04
    image: "${SIGHT_CI_UBUNTU21_04}:dev"
    variables:
        BUILD_TYPE: "Release"
        TARGET_OS: "Ubuntu-21.04"

deploy:linux_relwithdebinfo_21.04:
    extends: .linux_deploy_template
    dependencies:
        - build:linux_relwithdebinfo_21.04
    image: "${SIGHT_CI_UBUNTU21_04}:dev"
    variables:
        BUILD_TYPE: "RelWithDebInfo"
        TARGET_OS: "Ubuntu-21.04"
